apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.gt.giscollect"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 13
        versionName "1.1.1"
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }

        dexOptions { //优化dex配置
            dexInProcess true
            preDexLibraries true
            javaMaxHeapSize "4g"
        }

        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
                jni.srcDirs = []    //disable automatic ndk-build
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        incremental = true  //开启增量编译
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            crunchPngs false //关闭crunchPng优化, 以加快构建
            minifyEnabled false
            buildConfigField "boolean", "RELEASE", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "RELEASE", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (!variant.buildType.debuggable) {
                outputFileName = "清河CIM_" + getTime() + "_" + defaultConfig.versionName + ".apk"
            }
        }
    }




}

repositories {
    flatDir { dirs 'libs' }
}


def getTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.github.bumptech.glide:okhttp3-integration:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation project(':zxmvp')
    implementation project(':module_map')
    implementation('com.github.StannyBing:ZXUtils:2.3.8') {
        exclude group: 'com.squareup.okhttp3'
    }
//    implementation 'me.jessyan:autosize:1.1.2'
//    implementation 'com.esri.arcgis.android:arcgis-android:10.2.9'
//    implementation 'com.esri.arcgisruntime:arcgis-android:100.1.0'
    implementation 'com.github.StannyBing:BingUIDemo:1.0.2'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.tencent.bugly:crashreport:3.0.0'
    implementation project(path: ':entrypad')
    implementation project(path: ':camera')
    implementation project(path: ':base')

//    implementation "mil.nga.geopackage:geopackage-android:3.5.0"
}
